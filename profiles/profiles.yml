dbtvault:
  outputs:
    snowflake:
      type: snowflake
      account: "{{ env_var('SNOWFLAKE_DB_ACCOUNT') }}"

      user: "{{ env_var('SNOWFLAKE_DB_USER') }}"
      password: "{{ env_var('SNOWFLAKE_DB_PW') }}"

      role: "{{ env_var('SNOWFLAKE_DB_ROLE') }}"
      database: "{{ env_var('SNOWFLAKE_DB_DATABASE') }}"
      warehouse: "{{ env_var('SNOWFLAKE_DB_WH') }}"
      schema: "{{ env_var('SNOWFLAKE_DB_SCHEMA') }}"
      
      threads: 4
      client_session_keep_alive: False
      
    bigquery:
      type: bigquery
      
      method: oauth
      
      project: "{{ env_var('GCP_PROJECT_ID') }}"
      dataset: "{{ env_var('GCP_DATASET') }}"

      threads: 4
      timeout_seconds: 300
      priority: interactive
      retries: 1

    sqlserver:
      type: sqlserver
      driver: "ODBC Driver 17 for SQL Server"
      server: "{{ env_var('SQLSERVER_DB_SERVER') }}"
      port: "{{ env_var('SQLSERVER_DB_PORT') | int }}"
      database: "{{ env_var('SQLSERVER_DB_DATABASE') }}"
      schema: "{{ env_var('SQLSERVER_DB_SCHEMA') }}"
      user: "{{ env_var('SQLSERVER_DB_USER') }}"
      password: "{{ env_var('SQLSERVER_DB_PW') }}"

  target: "{{ env_var('TARGET') }}"

snowflake-demo:
  outputs:
    snowflake:
      type: snowflake
      account: "{{ env_var('SNOWFLAKE_DB_ACCOUNT') }}"

      user: "{{ env_var('SNOWFLAKE_DB_USER') }}"
      password: "{{ env_var('SNOWFLAKE_DB_PW') }}"

      role: "{{ env_var('SNOWFLAKE_DB_ROLE') }}"
      database: "{{ env_var('SNOWFLAKE_DB_DATABASE') }}"
      warehouse: "{{ env_var('SNOWFLAKE_DB_WH') }}"
      schema: "{{ env_var('SNOWFLAKE_DB_SCHEMA') }}"

      threads: 4
      client_session_keep_alive: False

  target: "{{ env_var('TARGET') }}"
